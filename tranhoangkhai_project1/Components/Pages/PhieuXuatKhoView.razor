 @page "/phieuxuatkho-list"
@inject iPhieuXuatKhoService PhieuXuatKhoService
@inject iHieuChinhPhieuNhapKhoService HieuChinhPhieuNhapKhoService
@inject IJSRuntime js
@inject NavigationManager nav
@rendermode @(new InteractiveServerRenderMode(prerender:false))

<PageTitle>PHIẾU XUẤT KHO</PageTitle>
<h1>PHIẾU XUẤT KHO</h1>
<hr />
<button class="btn btn-primary" @onclick="AddPhieuXuatKho">Thêm phiếu xuất kho</button>
@if (phieuXuatKhoList.Count == 0)
{
    <hr />
    <p>Chưa tìm thấy loại phiếu xuất kho nào! Vui lòng thêm phiếu xuất kho!</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Mã Phiếu Nhập Kho
                </th>
                <th>
                    Mã kho
                </th>
                <th>
                    Ngày nhập
                </th>
                <th>
                    Ghi chú
                </th>
                <th>

                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var phieu in phieuXuatKhoList)
            {
                <tr>
                    <td>
                        @phieu.So_Phieu_Xuat_Kho
                    </td>
                    <td>
                        @phieu.Kho_ID
                    </td>
                    <td>
                        @phieu.Ngay_Nhap_Kho

                    </td>
                    <td>
                        @phieu.Ghi_Chu
                    </td>
                    <td>
                        <button class="btn btn-outline-info" @onclick="@(()=>HieuChinh(phieu.So_Phieu_Xuat_Kho))">Hiệu chỉnh</button>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="@(()=>DeletePhieuXuatKho(phieu.So_Phieu_Xuat_Kho))">Xóa</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }

}

@code {
    List<PhieuXuatKhoModel> phieuXuatKhoList = new List<PhieuXuatKhoModel>();
    public string ErrorMessage { get; set; }
    protected override async Task OnInitializedAsync()
    {
        phieuXuatKhoList = await PhieuXuatKhoService.GetAllPhieuXuatKhoAsync();
    }
    void AddPhieuXuatKho()
    {
        nav.NavigateTo($"/edit-phieuxuatkho");
    }
    async Task DeletePhieuXuatKho(string maphieu)
    {
        var hieuchinhPhieuXuatKho = await HieuChinhPhieuNhapKhoService.GetByIdAsync(maphieu);

        if (hieuchinhPhieuXuatKho is null)
        {
            var confirmed = await js.InvokeAsync<bool>("confirm", "Bạn có chắc chắn muốn xóa phiếu này?");
            if (confirmed)
            {

                await PhieuXuatKhoService.DeletePhieuXuatKhoAsync(maphieu);
                phieuXuatKhoList = await PhieuXuatKhoService.GetAllPhieuXuatKhoAsync();
            }
        }
        else
        {
            ErrorMessage = "Không thể xóa phiếu nhập!";
            return;
        }

    }
    async Task HieuChinh(string So_Phieu_Xuat_Kho)
    {
        nav.NavigateTo($"/edit-hieuchinhphieuxuat/{So_Phieu_Xuat_Kho}");
    }
}