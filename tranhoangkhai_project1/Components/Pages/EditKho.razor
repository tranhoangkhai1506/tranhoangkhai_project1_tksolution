@page "/edit-kho"
@page "/edit-kho/{tenKho}"
@inject iKhoService KhoService
@inject NavigationManager nav
@rendermode @(new InteractiveServerRenderMode(prerender:false))

@if (TenKho is null)
{
    <PageTitle>Thêm đơn vị tính</PageTitle>
    <h3>Thêm đơn vị tính</h3>

    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }

    <EditForm Model="CurrentKho" OnSubmit="HandleSubmit">
        <div>
            <label for="Ten_Kho">Tên Kho</label>
            <InputText id="Ten_Kho" @bind-Value="CurrentKho.Ten_Kho" class="form-control"></InputText>
        </div>
        <div>
            <label for="Ghi_Chu">Ghi Chú</label>
            <InputText id="Ghi_Chu" @bind-Value="CurrentKho.Ghi_Chu" class="form-control"></InputText>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Lưu</button>
    </EditForm>
}
else
{
    <PageTitle>Chỉnh sửa "@CurrentKho.Ten_Kho"</PageTitle>
    <h3>Chỉnh sửa "@CurrentKho.Ten_Kho"</h3>
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }

    <EditForm Model="CurrentKho" OnSubmit="HandleSubmit">
        <div>
            <label for="Ghi_Chu">Ghi chú</label>
            <InputText id="Ghi_Chu" @bind-Value="CurrentKho.Ghi_Chu" class="form-control"></InputText>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Lưu</button>
    </EditForm>
}

@code {
    [Parameter]
    public string? TenKho { get; set; }
    public string ErrorMessage { get; set; }
    public KhoModel CurrentKho { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        if (TenKho is not null)
        {
            var dvt = await KhoService.GetByIdAsync(TenKho);
            if (dvt is not null)
            {
                CurrentKho = dvt;
            }
        }
    }

    async Task HandleSubmit()
    {
        if (string.IsNullOrWhiteSpace(CurrentKho.Ten_Kho))
        {
            ErrorMessage = "Tên kho tính không được để trống.";
            return;
        }

        var existingUnitCode = await KhoService.GetByIdAsync(CurrentKho.Ten_Kho);
        if (existingUnitCode != null && TenKho is null)
        {
            ErrorMessage = "Tên kho đã tồn tại.";
            return;
        }
        if (string.IsNullOrWhiteSpace(CurrentKho.Ghi_Chu))
        {
            ErrorMessage = "Ghi chú không được để trống.";
            return;
        }

        if (TenKho is not null)
        {
            await KhoService.UpdateKhoAsync(CurrentKho, TenKho);
            nav.NavigateTo("/kho-list");
        }
        else
        {
            await KhoService.AddKho(CurrentKho);
            nav.NavigateTo("/kho-list");
        }
    }
}
