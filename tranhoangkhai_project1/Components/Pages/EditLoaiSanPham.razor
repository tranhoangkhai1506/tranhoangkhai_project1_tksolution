@page "/edit-loaisanpham"
@page "/edit-loaisanpham/{Ma_LSP}"
@inject iLoaiSanPhamService LoaiSanPhamSevice
@inject IJSRuntime js
@inject ShowErrorMessage SweetAlert
@inject NavigationManager nav
@rendermode @(new InteractiveServerRenderMode(prerender:false))

@if (Ma_LSP is null)
{
    <PageTitle>THÊM LOẠI SẢN PHẨM</PageTitle>
    <h1 style="text-align: center;"><strong>THÊM LOẠI SẢN PHẨM</strong></h1>
    <hr />
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-6">
                <div class="card">
                    <div class="card-header"><strong>THÔNG TIN LOẠI SẢN PHẨM</strong></div>
                    <div class="card-body">
                        <EditForm Model="CurrentLSP" OnSubmit="HandleSubmit">
                            <div>
                                <label for="Ma_LSP"><strong>Mã Loại</strong></label>
                                <InputText id="Ma_LSP" @bind-Value="CurrentLSP.Ma_LSP" class="form-control"></InputText>
                            </div>
                            <div>
                                <label for="Ten_LSP"><strong>Tên Loại Sản Phẩm</strong></label>
                                <InputText id="Ten_LSP" @bind-Value="CurrentLSP.Ten_LSP" class="form-control"></InputText>
                            </div>
                            <div>
                                <label for="Ghi_Chu"><strong>Ghi chú</strong></label>
                                <InputText id="Ghi_Chu" @bind-Value="CurrentLSP.Ghi_Chu" class="form-control"></InputText>
                            </div>
                        </EditForm>
                    </div>
                    <div class="card-footer">
                        <div class="hstack gap-3 float-end">
                            <form method="dialog">
                                <button class="btn btn-danger" @onclick="OnClose">Close</button>
                            </form>
                            <button class="btn btn-success" @onclick="HandleSubmit" type="submit">Lưu</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    
}
else
{
    <PageTitle>CHỈNH SỬA "@CurrentLSP."</PageTitle>
    <h1 style="text-align: center;"><strong>SỬA LOẠI SẢN PHẨM</strong></h1>
    <hr />
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-6">
                <div class="card">
                    <div class="card-header"><strong>THÔNG TIN LOẠI SẢN PHẨM</strong></div>
                    <div class="card-body">
                        <EditForm Model="CurrentLSP" OnSubmit="HandleSubmit">
                            <div>
                                <label for="Ma_LSP"><strong>Mã Loại</strong></label>
                                <InputText id="Ma_LSP" @bind-Value="CurrentLSP.Ma_LSP" class="form-control"></InputText>
                            </div>
                            <div>
                                <label for="Ten_LSP"><strong>Tên Loại Sản Phẩm</strong></label>
                                <InputText id="Ten_LSP" @bind-Value="CurrentLSP.Ten_LSP" class="form-control"></InputText>
                            </div>
                            <div>
                                <label for="Ghi_Chu"><strong>Ghi chú</strong></label>
                                <InputText id="Ghi_Chu" @bind-Value="CurrentLSP.Ghi_Chu" class="form-control"></InputText>
                            </div>
                        </EditForm>
                    </div>
                    <div class="card-footer">
                        <div class="hstack gap-3 float-end">
                            <form method="dialog">
                                <button class="btn btn-danger" @onclick="OnClose">Close</button>
                            </form>
                            <button class="btn btn-success" @onclick="HandleSubmit" type="submit">Lưu</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}

@code {
    [Parameter]
    public string? Ma_LSP { get; set; }
    public string ErrorMessage { get; set; }
    public LoaiSanPhamModel CurrentLSP { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        if (Ma_LSP is not null)
        {
            var loaiSanPham = await LoaiSanPhamSevice.GetByIdAsync(Ma_LSP);
            if (loaiSanPham is not null)
            {
                CurrentLSP = loaiSanPham;
            }
        }
    }
    private void OnClose(EventArgs e)
    {
        ClearPhieuContainer();
        nav.NavigateTo("/loaisanpham-list");
    }
    public void ClearPhieuContainer()
    {
        CurrentLSP = new();
    }

    async Task HandleSubmit()
    {
        if (string.IsNullOrWhiteSpace(CurrentLSP.Ma_LSP))
        {
            await SweetAlert.ShowToast("Mã loại sản phẩm không được để trống.", "Error", 1000);
            return;
        }
        var existingMaLoaiCode = await LoaiSanPhamSevice.GetByMaLoaiAsync(CurrentLSP.Ma_LSP);
        if (existingMaLoaiCode != null && !existingMaLoaiCode.Ma_LSP.Equals(Ma_LSP))
        {
            await SweetAlert.ShowToast("Mã loại sản phẩm đã tồn tại.", "Error", 1000);
            return;
        }

        var existingUnitCode = await LoaiSanPhamSevice.GetByNameAsync(CurrentLSP.Ten_LSP);
        if (existingUnitCode != null )
        {
            if (!existingMaLoaiCode.Ma_LSP.Equals(Ma_LSP))
            {
               await SweetAlert.ShowToast("Tên loại sản phẩm đã tồn tại.", "Error", 1000);
            return; 
            }
            
        }

        if (string.IsNullOrWhiteSpace(CurrentLSP.Ten_LSP))
        {
            await SweetAlert.ShowToast("Tên loại sản phẩm không được để trống.", "Error", 1000);
            return;
        }

        var existingUni = await LoaiSanPhamSevice.GetByIdAsync(CurrentLSP.Ma_LSP);
        if (existingUni != null && Ma_LSP is null)
        {
            await SweetAlert.ShowToast("Mã loại sản phẩm đã tồn tại.", "Error", 1000);
            return;
        }

        if (Ma_LSP is not null)
        {
            await LoaiSanPhamSevice.UpdateLoaiSanPhamAsync(CurrentLSP, Ma_LSP);
            await SweetAlert.ShowToast("Sửa thành công!", "Success", 1000);
            nav.NavigateTo("/loaisanpham-list");
        }
        else
        {
            await LoaiSanPhamSevice.AddLoaiSanPham(CurrentLSP);
            await SweetAlert.ShowToast("Thêm thành công!", "Success", 1000);
            nav.NavigateTo("/loaisanpham-list");
        }
    }

}
