@page "/edit-loaisanpham"
@page "/edit-loaisanpham/{Ma_LSP}"
@inject iLoaiSanPhamService LoaiSanPhamSevice
@inject NavigationManager nav
@rendermode @(new InteractiveServerRenderMode(prerender:false))

@if (Ma_LSP is null)
{
    <PageTitle>Thêm đơn vị tính</PageTitle>
    <h3>Thêm đơn vị tính</h3>
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
    <EditForm Model="CurrentLSP" OnSubmit="HandleSubmit">
        <div>
            <label for="Ma_LSP">Mã Loại</label>
            <InputText id="Ma_LSP" @bind-Value="CurrentLSP.Ma_LSP" class="form-control"></InputText>
        </div>
        <div>
            <label for="Ten_LSP">Tên Loại Sản Phẩm</label>
            <InputText id="Ten_LSP" @bind-Value="CurrentLSP.Ten_LSP" class="form-control"></InputText>
        </div>
        <div>
            <label for="Ghi_Chu">Ghi chú</label>
            <InputText id="Ghi_Chu" @bind-Value="CurrentLSP.Ghi_Chu" class="form-control"></InputText>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Lưu</button>
    </EditForm>
}
else
{
    <PageTitle>Chỉnh sửa "@CurrentLSP."</PageTitle>
    <h3>Chỉnh sửa "@CurrentLSP.Ten_LSP"</h3>
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
    <EditForm Model="CurrentLSP" OnSubmit="HandleSubmit">
        <div>
            <label for="Ten_LSP">Ten SP</label>
            <InputText id="Ten_LSP" @bind-Value="CurrentLSP.Ten_LSP" class="form-control"></InputText>
        </div>
        <div>
            <label for="Ghi_Chu">Ghi chú</label>
            <InputText id="Ghi_Chu" @bind-Value="CurrentLSP.Ghi_Chu" class="form-control"></InputText>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Lưu</button>
    </EditForm>
}

@code {
    [Parameter]
    public string? Ma_LSP { get; set; }
    public string ErrorMessage { get; set; }
    public LoaiSanPhamModel CurrentLSP { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        if (Ma_LSP is not null)
        {
            var loaiSanPham = await LoaiSanPhamSevice.GetByIdAsync(Ma_LSP);
            if (loaiSanPham is not null)
            {
                CurrentLSP = loaiSanPham;
            }
        }
    }

    async Task HandleSubmit()
    {
        if (string.IsNullOrWhiteSpace(CurrentLSP.Ma_LSP))
        {
            ErrorMessage = "Mã loại sản phẩm không được để trống.";
            return;
        }

        var existingUnitCode = await LoaiSanPhamSevice.GetByIdAsync(CurrentLSP.Ma_LSP);
        if (existingUnitCode != null && Ma_LSP is null)
        {
            ErrorMessage = "Mã loại sản phẩm đã tồn tại.";
            return;
        }

        if (string.IsNullOrWhiteSpace(CurrentLSP.Ten_LSP))
        {
            ErrorMessage = "Tên loại sản phẩm không được để trống.";
            return;
        }

        var existingUni = await LoaiSanPhamSevice.GetByIdAsync(CurrentLSP.Ma_LSP);
        if (existingUni != null && Ma_LSP is null)
        {
            ErrorMessage = "Mã sản phẩm đã tồn tại.";
            return;
        }
        if (string.IsNullOrWhiteSpace(CurrentLSP.Ghi_Chu))
        {
            ErrorMessage = "Ghi chú không được để trống.";
            return;
        }
        if (Ma_LSP is not null)
        {
            await LoaiSanPhamSevice.UpdateLoaiSanPhamAsync(CurrentLSP, Ma_LSP);
            nav.NavigateTo("/loaisanpham-list");
        }
        else
        {
            await LoaiSanPhamSevice.AddLoaiSanPham(CurrentLSP);
            nav.NavigateTo("/loaisanpham-list");
        }
    }
}
