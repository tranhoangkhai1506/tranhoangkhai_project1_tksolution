@page "/edit-nhacungcap"
@page "/edit-nhacungcap/{Id}"
@inject IJSRuntime js
@inject ShowErrorMessage SweetAlert
@inject iNhaCungCapService NhaCungCapSevice
@inject NavigationManager nav
@rendermode @(new InteractiveServerRenderMode(prerender:false))

@if (Id is null)
{
    <PageTitle>THÊM NHÀ CUNG CẤP</PageTitle>
    <h1 style="text-align: center;"><strong>THÊM NHÀ CUNG CẤP</strong></h1>
    <hr />
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-6">
                <div class="card">
                    <div class="card-header"><strong>THÔNG TIN NHÀ CUNG CẤP</strong></div>
                    <div class="card-body">
                        <EditForm Model="CurrentNCC" OnSubmit="HandleSubmit">
                            <div>
                                <label for="Ma_NCC"><strong>Mã Nhà Cung Cấp</strong></label>
                                <InputText id="Ma_NCC" @bind-Value="CurrentNCC.Ma_NCC" class="form-control"></InputText>
                            </div>
                            <div>
                                <label for="Ten_NCC"><strong>Tên Nhà Cung Cấp</strong></label>
                                <InputText id="Ten_NCC" @bind-Value="CurrentNCC.Ten_NCC" class="form-control"></InputText>
                            </div>
                            <div>
                                <label for="Ghi_Chu"><strong>Ghi Chú</strong></label>
                                <InputText id="Ghi_Chu" @bind-Value="CurrentNCC.Ghi_Chu" class="form-control"></InputText>
                            </div>
                        </EditForm>
                    </div>
                    <div class="card-footer">
                        <div class="hstack gap-3 float-end">
                            <form method="dialog">
                                <button class="btn btn-danger" @onclick="OnClose">Close</button>
                            </form>
                            <button class="btn btn-success" @onclick="HandleSubmit" type="submit">Lưu</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

        
}
else
{
    <PageTitle>Chỉnh sửa "@CurrentNCC."</PageTitle>
    <h1 style="text-align: center;"><strong>SỬA NHÀ CUNG CẤP</strong></h1>
    <hr />
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }

    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-6">
                <div class="card">
                    <div class="card-header"><strong>THÔNG TIN NHÀ CUNG CẤP</strong></div>
                    <div class="card-body">
                        <EditForm Model="CurrentNCC" OnSubmit="HandleSubmit">
                            <div>
                                <label for="Ma_NCC"><strong>Mã Nhà Cung Cấp</strong></label>
                                <InputText id="Ma_NCC" @bind-Value="CurrentNCC.Ma_NCC" class="form-control"></InputText>
                            </div>
                            <div>
                                <label for="Ten_NCC"><strong>Tên Nhà Cung Cấp</strong></label>
                                <InputText id="Ten_NCC" @bind-Value="CurrentNCC.Ten_NCC" class="form-control"></InputText>
                            </div>
                            <div>
                                <label for="Ghi_Chu"><strong>Ghi Chú</strong></label>
                                <InputText id="Ghi_Chu" @bind-Value="CurrentNCC.Ghi_Chu" class="form-control"></InputText>
                            </div>
                        </EditForm>
                    </div>
                    <div class="card-footer">
                        <div class="hstack gap-3 float-end">
                            <form method="dialog">
                                <button class="btn btn-danger" @onclick="OnClose">Close</button>
                            </form>
                            <button class="btn btn-success" @onclick="HandleSubmit" type="submit">Lưu</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}

@code {
    [Parameter]
    public string? Id { get; set; }
    public string ErrorMessage { get; set; }


    public NhaCungCapModel CurrentNCC { get; set; } = new();
    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var sanPham = await NhaCungCapSevice.GetByIdAsync(Convert.ToInt32(Id));
            if (sanPham is not null)
            {
                CurrentNCC = sanPham;
            }
        }
    }

    async Task HandleSubmit()
    {

        if (string.IsNullOrWhiteSpace(CurrentNCC.Ma_NCC))
        {
            await SweetAlert.ShowToast("Mã nhà cung cấp không được để trống.", "Error", 1000);
            return;
        }
        var existingProduct = await NhaCungCapSevice.GetByMaNCCAsync(CurrentNCC.Ma_NCC);
        if (existingProduct != null && existingProduct.Id != Convert.ToInt32(Id))
        {
            await SweetAlert.ShowToast("Mã nhà cung cấp đã tồn tại.", "Error", 1000);
            return;
        }

        if (string.IsNullOrWhiteSpace(CurrentNCC.Ten_NCC))
        {
            await SweetAlert.ShowToast("Tên nhà cung cấp không được để trống.", "Error", 1000);
            return;
        }
        var existingNCCName = await NhaCungCapSevice.GetByNameAsync(CurrentNCC.Ten_NCC);
        if (existingNCCName != null && existingNCCName.Id != Convert.ToInt32(Id))
        {
            await SweetAlert.ShowToast("Tên nhà cung cấp đã tồn tại.", "Error", 1000);
            return;
        }
        if (Id is not null)
        {
            try
            {
                await NhaCungCapSevice.UpdateNhaCungCapAsync(CurrentNCC, Convert.ToInt32(Id));
                await SweetAlert.ShowToast("Sửa thành công", "Success", 1000);
                nav.NavigateTo("/nhacungcap-list");
            }   
            catch(Exception e)
            {
                await SweetAlert.ShowToast(e.ToString(), "Error", 1000);
            }            
        }
        else
        {
            try
            {
                await NhaCungCapSevice.AddNhaCungCap(CurrentNCC);
                await SweetAlert.ShowToast("Thêm thành công", "Success", 1000);
                nav.NavigateTo("/nhacungcap-list");               
            }
            catch (Exception e)
            {
                await SweetAlert.ShowToast(e.ToString(), "Error", 1000);
            }
            
        }
    }
    private void OnClose(EventArgs e)
    {
        ClearPhieuContainer();
        nav.NavigateTo("/nhacungcap-list");
    }
    public void ClearPhieuContainer()
    {
        CurrentNCC = new();
    }
}
