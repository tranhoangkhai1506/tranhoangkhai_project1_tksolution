@page "/edit-phieunhapkho"
@page "/edit-phieunhapkho/{So_Phieu_Nhap_Kho}"
@inject iNhaCungCapService NhaCungCapService
@inject iKhoService KhoService
@inject iPhieuNhapKhoService PhieuNhapKhoService
@inject NavigationManager nav
@inject IJSRuntime js
@inject ShowErrorMessage SweetAlert
@rendermode @(new InteractiveServerRenderMode(prerender:false))

@if (So_Phieu_Nhap_Kho is null)
{
    <PageTitle>Thêm Phiếu Nhập Kho</PageTitle>
    <h1 style="text-align: center;"><strong>Thêm Phiếu Nhập Kho</strong></h1>
    <hr />
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-6">
                <div class="card">
                    <div class="card-header"><strong>Thông Tin Phiếu Nhập Kho</strong></div>
                    <div class="card-body">
                        <EditForm Model="phieuNhapKho" OnSubmit="HandleSubmit">
                            <div>
                                <label for="So_Phieu_Nhap_Kho">Số Phiếu Nhập Kho</label>
                                <InputText id="So_Phieu_Nhap_Kho" @bind-Value="phieuNhapKho.So_Phieu_Nhap_Kho" class="form-control"></InputText>
                            </div>
                            <div>
                                <label for="NCC_ID">Nhà Cung Cấp</label>
                                <InputSelect class="form-control" id="NCC_ID" @bind-Value="phieuNhapKho.NCC_ID">
                                    <option value="" disabled selected>Chọn nhà cung cấp</option>
                                    @foreach (var nhacungcap in listNhaCC)
                                    {
                                        <option value="@nhacungcap.Ma_NCC">@nhacungcap.Ten_NCC</option>
                                    }
                                </InputSelect>
                            </div>
                            <div>
                                <label for="Kho_ID">Kho</label>
                                <InputSelect class="form-control" id="Kho_ID" @bind-Value="phieuNhapKho.Kho_ID">
                                    <option value="" disabled selected>Chọn kho</option>
                                    @foreach (var kho in listKho)
                                    {
                                        <option value="@kho.KhoId">@kho.Ten_Kho</option>
                                    }
                                </InputSelect>
                            </div>
                            <div>
                                <label for="Ngay_Nhap_Kho">Ngày Nhập Kho</label>
                                <InputDate id="Ngay_Nhap_Kho" @bind-Value="phieuNhapKho.Ngay_Nhap_Kho" class="form-control"></InputDate>
                            </div>
                            <div>
                                <label for="Ghi_Chu">Ghi Chú</label>
                                <InputText id="Ghi_Chu" @bind-Value="phieuNhapKho.Ghi_Chu" class="form-control"></InputText>
                            </div>
                            <div class="card-footer">
                                <button class="btn btn-success" type="submit">Lưu</button>
                                <button class="btn btn-danger" @onclick="OnClose">Close</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <PageTitle>Sửa Phiếu Nhập Kho</PageTitle>
    <h1 style="text-align: center;"><strong>Sửa Phiếu Nhập Kho</strong></h1>
    <hr />
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-6">
                <div class="card">
                    <div class="card-header"><strong>Thông Tin Phiếu Nhập Kho</strong></div>
                    <div class="card-body">
                        <EditForm Model="phieuNhapKho" OnSubmit="HandleSubmit">
                            <div>
                                <label for="NCC_ID">Nhà Cung Cấp</label>
                                <InputSelect class="form-control" id="NCC_ID" @bind-Value="phieuNhapKho.NCC_ID">
                                    <option value="" disabled selected>Chọn nhà cung cấp</option>
                                    @foreach (var nhacungcap in listNhaCC)
                                    {
                                        <option value="@nhacungcap.Ma_NCC">@nhacungcap.Ten_NCC</option>
                                    }
                                </InputSelect>
                            </div>
                            <div>
                                <label for="Kho_ID">Kho</label>
                                <InputSelect class="form-control" id="Kho_ID" @bind-Value="phieuNhapKho.Kho_ID">
                                    <option value="" disabled selected>Chọn kho</option>
                                    @foreach (var kho in listKho)
                                    {
                                        <option value="@kho.KhoId">@kho.Ten_Kho</option>
                                    }
                                </InputSelect>
                            </div>
                            <div>
                                <label for="Ngay_Nhap_Kho">Ngày Nhập Kho</label>
                                <InputDate id="Ngay_Nhap_Kho" @bind-Value="phieuNhapKho.Ngay_Nhap_Kho" class="form-control"></InputDate>
                            </div>
                            <div>
                                <label for="Ghi_Chu">Ghi Chú</label>
                                <InputText id="Ghi_Chu" @bind-Value="phieuNhapKho.Ghi_Chu" class="form-control"></InputText>
                            </div>
                            <div class="card-footer">
                                <button class="btn btn-success" type="submit">Lưu</button>
                                <button class="btn btn-danger" @onclick="OnClose">Close</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string? So_Phieu_Nhap_Kho { get; set; }
    public string ErrorMessage { get; set; }
    public PhieuNhapKhoModel phieuNhapKho { get; set; } = new();
    public List<NhaCungCapModel> listNhaCC { get; set; } = new List<NhaCungCapModel>();
    public List<KhoModel> listKho { get; set; } = new List<KhoModel>();

    protected override async Task OnParametersSetAsync()
    {
        listNhaCC = await NhaCungCapService.GetAllNhaCungCapAsync();
        listKho = await KhoService.GetAllKhoAsync();

        if (So_Phieu_Nhap_Kho is not null)
        {
            var phieu = await PhieuNhapKhoService.GetByIdAsync(So_Phieu_Nhap_Kho);
            if (phieu != null)
            {
                phieuNhapKho = phieu;
            }
        }
    }

    async Task HandleSubmit()
    {
        if (string.IsNullOrWhiteSpace(phieuNhapKho.So_Phieu_Nhap_Kho))
        {
            await SweetAlert.ShowToast("Số phiếu nhập kho không được để trống.", "Error", 1000);
            return;
        }

        var existingPNK = await PhieuNhapKhoService.GetByIdAsync(phieuNhapKho.So_Phieu_Nhap_Kho);
        if (existingPNK != null && So_Phieu_Nhap_Kho is null)
        {
            await SweetAlert.ShowToast("Số phiếu nhập kho đã tồn tại.", "Error", 1000);
            return;
        }

        if (string.IsNullOrWhiteSpace(phieuNhapKho.NCC_ID))
        {
            await SweetAlert.ShowToast("Nhà cung cấp không được để trống.", "Error", 1000);
            return;
        }

        if (string.IsNullOrWhiteSpace(phieuNhapKho.Kho_ID.ToString()))
        {
            await SweetAlert.ShowToast("Kho không được để trống.", "Error", 1000);
            return;
        }

        if (phieuNhapKho.Ngay_Nhap_Kho == default(DateTime))
        {
            await SweetAlert.ShowToast("Ngày nhập kho không được để trống.", "Error", 1000);
            return;
        }

        try
        {
            if (So_Phieu_Nhap_Kho is not null)
            {
                await PhieuNhapKhoService.UpdatePhieuNhapKhoAsync(phieuNhapKho, So_Phieu_Nhap_Kho);
                await SweetAlert.ShowToast("Sửa thành công", "Success", 1000);
            }
            else
            {
                await PhieuNhapKhoService.AddPhieuNhapKhoAsync(phieuNhapKho);
                await SweetAlert.ShowToast("Thêm thành công", "Success", 1000);
            }
            nav.NavigateTo("/phieunhapkho-list");
        }
        catch (Exception e)
        {
            await SweetAlert.ShowToast($"Có lỗi xảy ra: {e.Message}", "Error", 1000);
        }
    }


    private void OnClose(EventArgs e)
    {
        nav.NavigateTo("/phieunhapkho-list");
    }
}
