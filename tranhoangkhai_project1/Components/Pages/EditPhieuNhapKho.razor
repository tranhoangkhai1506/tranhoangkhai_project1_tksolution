@page "/edit-phieunhapkho"
@page "/edit-phieunhapkho/{So_Phieu_Nhap_Kho}"
@inject iNhaCungCapService NhaCungCapService
@inject iChiTietPhieuNhapKhoService ChiTietPhieuNhapKhoService
@inject iKhoService KhoService
@inject iPhieuNhapKhoService PhieuNhapKhoService
@inject iSanPhamService SanPhamSevice
@inject NavigationManager nav
@inject IJSRuntime js
@inject ShowErrorMessage SweetAlert
@rendermode @(new InteractiveServerRenderMode(prerender:false))


@if (So_Phieu_Nhap_Kho is null)
{
    <PageTitle>Thêm Phiếu Nhập Kho</PageTitle>
    <h1 style="text-align: center;"><strong>Thêm Phiếu Nhập Kho</strong></h1>
    <hr />
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
        <div class="card">
            <div class="card-header"><strong>Thông Tin Phiếu Nhập Kho</strong></div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                    <h4 style="text-align: center;"><strong>THÔNG TIN PHIẾU NHẬP</strong></h4>
                            <EditForm Model="phieuNhapKho" OnSubmit="HandleSubmitPNK">
                                <div>
                                    <label for="So_Phieu_Nhap_Kho">Số Phiếu Nhập Kho</label>
                                    <InputText id="So_Phieu_Nhap_Kho" @bind-Value="phieuNhapKho.So_Phieu_Nhap_Kho" class="form-control"></InputText>
                                </div>
                                <div>
                                    <label for="NCC_ID">Nhà Cung Cấp</label>
                                    <InputSelect class="form-control" id="NCC_ID" @bind-Value="phieuNhapKho.NCC_ID">
                                        <option value="" disabled selected>Chọn nhà cung cấp</option>
                                        @foreach (var nhacungcap in listNhaCC)
                                        {
                                    <option value="@nhacungcap.Id">@nhacungcap.Ten_NCC</option>
                                        }
                                    </InputSelect>
                                </div>
                                <div>
                                    <label for="Kho_ID">Kho</label>
                                    <InputSelect class="form-control" id="Kho_ID" @bind-Value="phieuNhapKho.Kho_ID">
                                        <option value="" disabled selected>Chọn kho</option>
                                        @foreach (var kho in listKho)
                                        {
                                            <option value="@kho.KhoId">@kho.Ten_Kho</option>
                                        }
                                    </InputSelect>
                                </div>
                                <div>
                                    <label for="Ngay_Nhap_Kho">Ngày Nhập Kho</label>
                                    <InputDate id="Ngay_Nhap_Kho" @bind-Value="phieuNhapKho.Ngay_Nhap_Kho" class="form-control"></InputDate>
                                </div>
                                <div>
                                    <label for="Ghi_Chu">Ghi Chú</label>
                                    <InputText id="Ghi_Chu" @bind-Value="phieuNhapKho.Ghi_Chu" class="form-control"></InputText>
                                </div>
                                <div class="card-footer">
                                    <button class="btn btn-success" type="submit">Lưu</button>
                                    <button class="btn btn-danger" @onclick="OnClose">Close</button>
                                </div>
                            </EditForm>
                        </div>
                        <div class="col-md-6">
                            <h4 style="text-align: center;"><strong>THÔNG TIN CHI TIẾT PHIẾU NHẬP</strong></h4>
                            <EditForm Model="CurrentCTPNK">
                                <div>
                                    <label for="San_Pham_ID">Sản Phẩm</label>
                                    <InputSelect class="form-control" id="San_Pham_ID" @bind-Value="CurrentCTPNK.San_Pham_ID">
                                        <option value="" disabled selected>Chọn sản phẩm nhập kho</option>
                                        @foreach (var sanpham in sanPhamList)
                                        {
                                            <option value="@sanpham.Id">@sanpham.Ten_San_Pham</option>
                                        }
                                    </InputSelect>
                                </div>
                                <div>
                                    <label for="SL_Nhap">Số lượng nhập</label>
                                    <InputNumber id="SL_Nhap" @bind-Value="CurrentCTPNK.SL_Nhap" class="form-control"></InputNumber>
                                </div>
                                <div>
                                    <label for="Don_Gia_Nhap">Đơn giá</label>
                                    <InputNumber id="Don_Gia_Nhap" @bind-Value="CurrentCTPNK.Don_Gia_Nhap" class="form-control"></InputNumber>
                                </div>
                                <div class="card-footer">
                            <button class="btn btn-success" @onclick="HandleSubmitCTPNK" type="submit">Thêm Chi Tiết</button>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
            
        <br />
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <strong>THÔNG TIN PHIẾU CHI TIẾT NHẬP KHO</strong>
            </div>
            <div class="table-responsive">
                <QuickGrid Items="@itemsQueryable" Pagination="@pagination" class="table table-striped table-hover">
                    <PropertyColumn Property="@(c => c.San_Pham_ID)" Sortable="true" Title="SẢN PHẨM ID" />
                    <PropertyColumn Property="@(c => $"{c.SL_Nhap:0.0}")" Sortable="true" Title="SỐ LƯỢNG" />
                    <PropertyColumn Property="@(c => $"{c.Don_Gia_Nhap:0.0}")" Sortable="true" Title="ĐƠN GIÁ" />
                    <PropertyColumn Property="@(c => c.SL_Nhap * c.Don_Gia_Nhap)" Format="0.00" Sortable="true" Title="TRỊ GIÁ" />
                    <TemplateColumn Title="Actions" Class="text-center">
                        @* <button class="btn btn-info btn-sm me-1" @onclick="@(() => EditCTPNK(context.Nhap_Kho_ID, context.San_Pham_ID))">Hiệu chỉnh</button> *@
                        <button class="btn btn-danger btn-sm me-1" @onclick="@(() => DeleteCTPNK(context))">Xóa</button>
                    </TemplateColumn>
                </QuickGrid>
            </div>
        </div>
}
else
{
    <PageTitle>Sửa Phiếu Nhập Kho</PageTitle>
    <h1 style="text-align: center;"><strong>Sửa Phiếu Nhập Kho</strong></h1>
    <hr />
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ErrorMessage
        </div>
    }
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-12 col-lg-6">
                <div class="card">
                    <div class="card-header"><strong>Thông Tin Phiếu Nhập Kho</strong></div>
                    <div class="card-body">
                        <EditForm Model="phieuNhapKho" OnSubmit="HandleSubmitPNK">
                            <div>
                                <label for="NCC_ID">Nhà Cung Cấp</label>
                                <InputSelect class="form-control" id="NCC_ID" @bind-Value="phieuNhapKho.NCC_ID">
                                    <option value="" disabled selected>Chọn nhà cung cấp</option>
                                    @foreach (var nhacungcap in listNhaCC)
                                    {
                                        <option value="@nhacungcap.Id">@nhacungcap.Ten_NCC</option>
                                    }
                                </InputSelect>
                            </div>
                            <div>
                                <label for="Kho_ID">Kho</label>
                                <InputSelect class="form-control" id="Kho_ID" @bind-Value="phieuNhapKho.Kho_ID">
                                    <option value="" disabled selected>Chọn kho</option>
                                    @foreach (var kho in listKho)
                                    {
                                        <option value="@kho.KhoId">@kho.Ten_Kho</option>
                                    }
                                </InputSelect>
                            </div>
                            <div>
                                <label for="Ngay_Nhap_Kho">Ngày Nhập Kho</label>
                                <InputDate id="Ngay_Nhap_Kho" @bind-Value="phieuNhapKho.Ngay_Nhap_Kho" class="form-control"></InputDate>
                            </div>
                            <div>
                                <label for="Ghi_Chu">Ghi Chú</label>
                                <InputText id="Ghi_Chu" @bind-Value="phieuNhapKho.Ghi_Chu" class="form-control"></InputText>
                            </div>
                            <div class="card-footer">
                                <button class="btn btn-success" type="submit">Lưu</button>
                                <button class="btn btn-danger" @onclick="OnClose">Close</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string? So_Phieu_Nhap_Kho { get; set; }
    public string ErrorMessage { get; set; }
    public ChiTietPhieuNhapKho CurrentCTPNK { get; set; } = new();
    public PhieuNhapKhoModel phieuNhapKho { get; set; } = new();
    public List<NhaCungCapModel> listNhaCC { get; set; } = new List<NhaCungCapModel>();
    public List<KhoModel> listKho { get; set; } = new List<KhoModel>();
    List<SanPhamModel> sanPhamList = new List<SanPhamModel>();
    List<ChiTietPhieuNhapKho> chitietList = new List<ChiTietPhieuNhapKho>();
    private int itemCount = 0;
    PaginationState pagination = new PaginationState { ItemsPerPage = 5 };
    IQueryable<ChiTietPhieuNhapKho>? itemsQueryable;

    protected override async Task OnParametersSetAsync()
    {
        listNhaCC = await NhaCungCapService.GetAllNhaCungCapAsync();
        listKho = await KhoService.GetAllKhoAsync();
        sanPhamList = await SanPhamSevice.GetAllSanPhamAsync();
        itemsQueryable = chitietList.AsQueryable();
        itemCount = itemsQueryable.Count();
        pagination.TotalItemCountChanged += (sender, eventArgs) => StateHasChanged();

        if (So_Phieu_Nhap_Kho is not null)
        {
            var phieu = await PhieuNhapKhoService.GetByIdAsync(So_Phieu_Nhap_Kho);
            if (phieu != null)
            {
                phieuNhapKho = phieu;
            }
        }
    }
    async Task DeleteCTPNK(dynamic context)
    {
        var confirmed = await js.InvokeAsync<bool>("confirm", "Bạn có chắc chắn muốn xóa phiếu này?");
        if (confirmed)
        {
            chitietList.Remove(context);
            await SweetAlert.ShowToast("Xóa thành công", "Success", 1000);
            itemsQueryable = chitietList.AsQueryable();
            pagination.TotalItemCountChanged += (sender, eventArgs) => StateHasChanged();
        }

    }

    async Task HandleSubmitPNK()
    {
        if (string.IsNullOrWhiteSpace(phieuNhapKho.So_Phieu_Nhap_Kho))
        {
            await SweetAlert.ShowToast("Số phiếu nhập kho không được để trống.", "Error", 1000);
            return;
        }

        var existingPNK = await PhieuNhapKhoService.GetByIdAsync(phieuNhapKho.So_Phieu_Nhap_Kho);
        if (existingPNK != null && So_Phieu_Nhap_Kho is null)
        {
            await SweetAlert.ShowToast("Số phiếu nhập kho đã tồn tại.", "Error", 1000);
            return;
        }

        if (phieuNhapKho.NCC_ID == 0)
        {
            await SweetAlert.ShowToast("Nhà cung cấp không được để trống.", "Error", 1000);
            return;
        }

        if (phieuNhapKho.Kho_ID == 0)
        {
            await SweetAlert.ShowToast("Kho không được để trống.", "Error", 1000);
            return;
        }

        if (phieuNhapKho.Ngay_Nhap_Kho == default(DateTime))
        {
            await SweetAlert.ShowToast("Ngày nhập kho không được để trống.", "Error", 1000);
            return;
        }

        try
        {
            if (So_Phieu_Nhap_Kho is not null)
            {
                await PhieuNhapKhoService.UpdatePhieuNhapKhoAsync(phieuNhapKho, So_Phieu_Nhap_Kho);
                await SweetAlert.ShowToast("Sửa thành công", "Success", 1000);
            }
            else
            {
                await PhieuNhapKhoService.AddPhieuNhapKhoAsync(phieuNhapKho);
                foreach(var chitiet in chitietList)
                {
                    chitiet.Nhap_Kho_ID = phieuNhapKho.So_Phieu_Nhap_Kho;
                    await ChiTietPhieuNhapKhoService.AddChiTietPhieuNhap(chitiet);
                }
                await SweetAlert.ShowToast("Thêm thành công", "Success", 1000);
            }
            nav.NavigateTo("/phieunhapkho-list");
        }
        catch (Exception e)
        {
            await SweetAlert.ShowToast($"Có lỗi xảy ra: {e.Message}", "Error", 1000);
        }
    }
    async Task HandleSubmitCTPNK()
    {
        if (CurrentCTPNK.San_Pham_ID == 0)
        {
            await SweetAlert.ShowMessage("Error", "Vui lòng chọn sản phẩm.", "Error");
            return;
        }
        if (CurrentCTPNK.SL_Nhap <= 0)
        {
            await SweetAlert.ShowMessage("Error", "Số lượng phải lớn hơn 0.", "Error");
            return;
        }
        if (CurrentCTPNK.Don_Gia_Nhap <= 0)
        {
            await SweetAlert.ShowMessage("Error", "Đơn giá phải lớn hơn 0.", "Error");
            return;
        }
        else
        {
            try
            {
                CurrentCTPNK.Nhap_Kho_ID = "pn_01";
                chitietList.Add(CurrentCTPNK);
                itemsQueryable = chitietList.AsQueryable();
                pagination.TotalItemCountChanged += (sender, eventArgs) => StateHasChanged();
                await SweetAlert.ShowToast("Thêm thành công", "Success", 1000);
                CurrentCTPNK = new();
            }
            catch (Exception e)
            {
                await SweetAlert.ShowMessage("Error", e.ToString(), "Error");
            }
        }
    }

    private void OnClose(EventArgs e)
    {
        nav.NavigateTo("/phieunhapkho-list");
    }
}
